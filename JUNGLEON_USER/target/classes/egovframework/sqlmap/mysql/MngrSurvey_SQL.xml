<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.itgcms.module.survey.service.impl.MngrSurveyMapper">
	
	
	<sql id="listWhere">
		/* listWhere */
		delyn = 'N'
		<if test="schOpt2 != null and schOpt2 != ''">
			
		</if>
		<if test="schStr != null and schStr !=''">
			AND sv_title LIKE CONCAT('%', #{schStr}, '%')
		</if>
	</sql>
	
	<sql id="listWhereCondition">
		<if test="schOpt2 != null and schOpt2 != ''">
			AND (USEYN = 'svstatus01' or USEYN = 'svstatus04')
		</if>
		<choose>
			<when test='schFld == ""'>
				AND S.sv_title LIKE CONCAT('%', #{schStr}, '%')
			</when>
			<otherwise>
				AND (S.sv_title LIKE CONCAT('%', #{schStr}, '%') OR S.sv_explain LIKE CONCAT('%', #{schStr}, '%'))
			</otherwise>
		</choose>
	</sql>
	
	<sql id="surveyColumn">
		sv_idx,    sv_title,    sv_outline,    sv_explain,    sv_startdate,    sv_enddate,    useyn,    delyn,	survey_site_code
	</sql>
	
	<sql id="surveyFullColumn">
		sv_idx, 	    sv_title,	    sv_outline,	    sv_explain,	    sv_startdate,	    sv_enddate,	    regdt,	    upddt,	    deldt,		survery_site_code,
	    regmemid,	    updmemid,	    delmemid,	    useyn,	    delyn,	    etc1,	    etc2
	</sql>
	
	
	 <select id="mngrSelectSurveyList" resultType="egovframework.itgcms.module.survey.service.SurveyVO" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
	 	/* mngrSelectSurveyList */
	 	SELECT 
	 		S.sv_idx, S.sv_title, S.sv_startdate, S.sv_enddate, S.regdt, S.regmemid, S.upddt, S.updmemid, S.deldt, S.delmemid, S.useyn,
	 		, (SELECT COUNT(1) FROM t_surveyanswer AS ia, t_member AS m WHERE ia.sv_idx = sv_idx) AS saNum
	 		, (SELECT COUNT(1) FROM t_surveyquestion AS sq WHERE sq.sv_idx= s.sv_idx ) AS questionNum
	 		, CASE WHEN (SELECT DATE_FORMAT(NOW(), "%Y-%c-%d") - sv_enddate)&lt; 1 and (SELECT  sv_startdate -DATE_FORMAT(NOW(), "%Y-%c-%d"))&lt;1 THEN 'Y' ELSE 'N'
	 		  END AS range_yn
	 		, (sv_enddate >= DATE_FORMAT(NOW(),"%Y-%c-%d")) AS isExpired
	 		, c.c_name as etc1
	 	FROM 
	 		t_survey as s
	 		LEFT JOIN 	t_code c on S.useyn = c.c_code
	 	WHERE
	 		S.delyn='N' AND survey_site_code = #{schSitecode}
	 		<include refid="listWhereCondition"/>
	 	ORDER BY
				sv_idx DESC
		LIMIT #{firstIndex}, #{recordCountPerPage}
	 </select>
	
	<select id="mngrGetSurveyListTotCnt" resultType="int" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* mngrSelectSurveyList */
	 	SELECT
	 		COUNT(1)
	 	FROM
	 		t_survey
 		WHERE
	 		delyn='N' AND survey_site_code = #{schSitecode}
			<include refid="listWhereCondition"/>
	</select>
	
	
	<delete id="mngrDelTempSurvey">
		/* mngrDelTempSurvey */
		DELETE FROM t_survey
		WHERE 
			useyn='T'
		    AND regmemid = #{mngrId} 
	</delete>
	
	<delete id="mngrDelSurQuestion">
		DELETE FROM t_surveyquestion
		WHERE 
			sv_idx = #{svIdx}
	</delete>
	
	<delete id="mngrDelSurQuestionOption">
		DELETE FROM t_surveyoption
		WHERE 
			sq_idx IN 
			(SELECT sq_idx FROM t_surveyquestion WHERE sv_idx = #{svIdx} )
	</delete>
	
	
	<!-- !! -->
	<insert id="mngrInsertSurveyInfo" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* mngrInsertSurveyInfo */
		INSERT INTO t_survey	(
			sv_idx,
			sv_title,
			sv_explain,
			sv_startdate,
			sv_enddate,
			regdt,
			regmemid,
			useyn,
			delyn,
			survery_site_code
		)
		VALUES(
			IFNULL(MAX(sv_idx),0) + 1,
			#{svTitle},
			#{svExplain},
			#{svStartdate},
			#{svEnddate},
			NOW(),
			#{regmemid},
			'svstatus02',
			'N',
			#{schSitecode}
		)
		<selectKey resultType="int" keyProperty="svIdx" order="AFTER">
			SELECT IFNULL(MAX(sv_idx), 0) AS svIdx FROM t_survey
		</selectKey>
	
	</insert>
	

	
	<insert id="mngrRegSurvQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
		/* mngrRegSurvQuestion */
		<selectKey resultType="int" keyProperty="sqIdx" order="BEFORE">
			SELECT IFNULL(MAX(sq_idx), 0) +1 AS sqIdx FROM t_surveyquestion
		</selectKey>
		INSERT INTO t_surveyquestion
		(
			sq_idx,
			sv_idx,
			sq_answertype,
			sq_question,
			regdt,
			regmemid,
			sq_order,
			sq_checklimit,
			sq_textlimit,
			delyn,
			sq_required,
			etc1,
			etc2
		)
		VALUES
		(
			#{sqIdx},
			#{svIdx},
			#{sqAnswertype},
			#{sqQuestion},
			NOW(),
			#{regmemid},
			#{sqOrder},
			#{sqChecklimit},
			#{sqTextlimit},
			'N',
			'Y',
			#{etc1},
			#{etc2}
		)
	</insert>
	
	<insert id="mngrRegSurvQueOption" parameterType="java.util.List">
			/* mngrRegSurvQueOption */
			INSERT INTO t_surveyoption
			(
				sq_idx,
				so_content,
				so_order,
				so_value,
				etc1,
				etc2
			)
			VALUES
			<foreach item="item" index="index" collection="list"  separator=",">
				(#{item.sqIdx},	#{item.soContent}, #{item.soOrder}, #{item.soValue},	#{item.etc1}, #{item.etc2})
			</foreach>
			
	</insert>
	
	
	<delete id="mngrDelSurveyQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
		/* mngrDelSurveyQuestion */
		DELETE FROM
			t_surveyquestion
		WHERE
			sv_idx = #{svIdx}
	</delete>
	
	
	<update id="mngrUpdSurveyInfo"  parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* mngrUpdSurveyInfo */
		UPDATE t_survey
		SET
			sv_title = #{svTitle},
			sv_explain = #{svExplain},
			sv_startdate = #{svStartdate},
			sv_enddate = #{svEnddate},
			upddt = NOW(),
			updmemid = #{updmemid},
			useyn = #{useyn},
			etc1 = #{etc1},
			etc2 = #{etc2},
			survey_site_code=#{schSitecode}
		WHERE
			sv_idx = #{svIdx}
	</update>
	
	<select id="selectSurvey"  parameterType="egovframework.itgcms.module.survey.service.SurveyVO" 
		 resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* selectSurvey */
		SELECT 
	 		<include refid="surveyColumn"/>
	 	FROM 
	 		t_survey
	 	WHERE
	 		delyn='N'
	 		<include refid="listWhereCondition"/>
	 		AND sv_idx = #{svIdx}
	</select>
	
	<!-- select id="selectEducationSurveyByEduIdx" resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* selectEducationSurveyByEduIdx */
		SELECT 
	 		<include refid="surveyColumn"/>,
	 		(SELECT COUNT(1) FROM t_surveyanswer AS ia, t_member AS m WHERE ia.sv_idx = s.sv_idx AND ia.sa_id = m.id) AS saNum
	 	FROM 
	 		t_survey AS s
	 	WHERE
	 		s.delyn ='N'
	 	ORDER BY s.sv_Idx DESC
	 	LIMIT 0, 1
	</select -->
	
	<select id="getSurveyNoDescQuesetion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
			/* getSurveyNoDescQuesetion */
			SELECT 
				sq_idx,
			    sv_idx,
			    sq_answertype,
			    sq_question,
			    regdt,
			    upddt,
			    deldt,
			    regmemid,
			    updmemid,
			    delmemid,
			    sq_order,
			    delyn,
			    sq_required,
			    etc1,
			    etc2
			FROM t_surveyquestion
			WHERE 
				sq_answertype != 'desc'
				AND sv_idx=#{svIdx}
				AND delyn = 'N'
			ORDER BY sq_order ASC
	</select>
	
	
	<select id="getSurveyNumericQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
		/* getSurveyNumericQuestion */
		SELECT 
			sq_idx,
		    sv_idx,
		    sq_answertype,
		    sq_question,
		    regdt,
		    upddt,
		    deldt,
		    regmemid,
		    updmemid,
		    delmemid,
		    sq_order,
		    delyn,
		    sq_required,
		    prof_idx,
		    etc1,
		    etc2
		FROM t_surveyquestion
		WHERE 
			(sq_answertype LIKE 'sc_%' || sq_answertype LIKE 'ob_%' || sq_answertype LIKE 'prof_%')
			AND sv_idx=#{svIdx}
			AND delyn = 'N'
		ORDER BY sq_order ASC, sq_idx asc
	</select>
	
	
	<select id="getSurveyDescQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
			/* getSurveyDescQuestion */
			SELECT 
				sq_idx,
			    sv_idx,
			    sq_answertype,
			    sq_question,
			    regdt,
			    upddt,
			    deldt,
			    regmemid,
			    updmemid,
			    delmemid,
			    sq_order,
			    delyn,
			    sq_required,
			    etc1,
			    etc2
			FROM t_surveyquestion
			WHERE 
				sq_answertype = 'desc'
				AND sv_idx=#{svIdx}
				AND delyn = 'N'
			ORDER BY sq_order ASC, sq_idx asc
	</select>
	
	<select id="getSurveyEditableQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
			/* getSurveyEditableQuestion */
			SELECT 
				sq_idx,
			    sv_idx,
			    sq_answertype,
			    sq_question,
			    regdt,
			    upddt,
			    deldt,
			    regmemid,
			    updmemid,
			    delmemid,
			    sq_order,
			    delyn,
			    sq_required,
			    prof_idx,
			    etc1,
			    etc2
			FROM t_surveyquestion
			WHERE 
				sq_answertype LIKE 'editable_%'
				AND sv_idx=#{svIdx}
				AND delyn = 'N'
			ORDER BY sq_order ASC, sq_idx asc
	</select>
	
	<select id="getSurvQuestionOptions" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
		/* getSurvQuestionOptions */
		SELECT 
			so_idx,
		    sq_idx,
		    so_content,
		    so_order,
		    so_value,
		    etc1,
		    etc2
		FROM t_surveyoption
		WHERE 	sq_idx=#{sqIdx}
		ORDER BY so_order ASC, so_idx ASC
	</select>
	
	<update id="mngrUpdateStartSurvey" parameterType="egovMap">
	/* mngrUpdateStartSurvey */
		UPDATE t_survey
		SET
			useyn = 'Y',
			updmemid=#{memId},
			upddt = NOW()
		WHERE 
		delyn = 'N'
		AND sv_enddate >= DATE_FORMAT(NOW(),"%Y-%c-%d")
		AND sv_idx IN 
		<foreach item="item" index="i" collection="list" open="("  separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<update id="mngrUpdateFinishSurvey" parameterType="egovMap">
	/* mngrUpdateFinishSurvey */
		UPDATE t_survey
		SET
			useyn = 'F',
			updmemid=#{memId},
			upddt = NOW()
		WHERE 
		delyn = 'N'
		AND sv_idx IN 
		<foreach item="item" index="i" collection="list" open="("  separator="," close=")">
			#{item} 
		</foreach>
	</update>
	
	
	<update id="mngrDeleteSurvey" parameterType="egovMap">
	/* mngrDeleteSurvey */
		UPDATE
			t_survey
		SET
			delyn = 'Y',
			delmemid = #{delmemid},
			deldt = SYSDATE
		WHERE
			sv_idx = #{svIdx}
	</update>
	
	
	<select id="mngrGetSurveyInfoByIdx" resultType="egovframework.itgcms.module.survey.service.SurveyVO">
	/* mngrGetSurveyInfoByIdx */
		SELECT 
	 		<include refid="surveyColumn"/>
	 	FROM 
	 		t_survey
	 	WHERE
	 		sv_idx = #{svIdx}
	</select>
	
	
	<select id="mngrSelectSurveyAnswerMem" resultType="egovframework.itgcms.module.survey.service.SurveyAnswerVO">
		/* mngrSelectSurveyAnswerMem */
		SELECT 
			s.sa_idx,
			s.sv_idx,
			s.sa_date,
			s.sa_id,
			m.name,
			c.comem_name AS etc1
		FROM 
			t_surveyanswer AS s, t_member AS m, t_comember AS c
		WHERE 
			sv_idx = #{svIdx}
			AND s.sa_id = m.id
			AND m.comem_idx = c.comem_idx
		ORDER BY 
			sa_idx DESC
	</select>
	
	
	<select id="mngrSumNumericValue" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
		SELECT 
			o.so_idx, o.so_value, COUNT(l.so_value) AS cnt
		FROM 
		 t_surveyvalue AS l RIGHT JOIN t_surveyoption AS o ON o.so_idx=l.so_idx
		WHERE 
			o.sq_idx=#{sqIdx}
		GROUP BY o.so_idx
		ORDER BY o.so_value DESC
	</select>
	
	
	<select id="mngrSumEditableValue" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
		SELECT 
			o.so_idx, o.so_content, o.so_value, COUNT(l.so_value) AS cnt
		FROM 
		 t_surveyvalue AS l RIGHT JOIN t_surveyoption AS o ON o.so_idx=l.so_idx
		WHERE 
			o.sq_idx=#{sqIdx}
		GROUP BY o.so_idx
		ORDER BY o.so_value DESC
	</select>
	
	
	<select id="mngrGetDescValue" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO" 
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
		SELECT 
			sa_idx,
		    sq_idx,
		    so_idx,
		    so_value 
	   FROM t_surveyvalue 
	   WHERE 
	   	sq_idx=#{sqIdx}
	</select>
	
	<!-- =============================================추가============================================== -->
	
	<insert id="insertSurveyQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
		/********** insertSurveyQuestion **********/
		INSERT INTO t_surveyquestion
			(sq_idx, sv_idx, sq_answertype, sq_question,
			regdt, regmemid, sq_order,sq_checklimit,sq_textlimit, delyn, sq_required, etc1, etc2)
		VALUES
			( IFNULL(MAX(sq_idx),0) + 1, #{svIdx}, #{sqAnswertype}, #{sqQuestion},
			SYSDATE, #{regmemid}, #{sqOrder},#{sqChecklimit},#{sqTextlimit}, 'N', #{sqRequired}, #{etc1}, #{etc2})
		<selectKey resultType="int" keyProperty="sqIdx" order="AFTER">
			SELECT IFNULL(MAX(sq_idx),0) + 1 FROM dual
		</selectKey>
	</insert>
	<insert id="insertSurveyOptions" parameterType="itgMap">
		/********** insertSurveyOptions **********/
		 INSERT INTO t_surveyoption (so_idx, sq_idx, so_content, so_order, so_value,so_inputyn, etc1, etc2)
        	SELECT IFNULL(MAX(sq_idx),0) + 1 , iData.* from
        	 <foreach item="item" collection="optionList" open="(" close=")" separator="UNION">
	            SELECT #{quIdx}, #{item.soContent}, #{item.soOrder}, #{item.soValue},#{item.soInputyn}, #{item.etc1}, #{item.etc2} 
         </foreach>
        iData
	</insert>
	<!-- <select id="getSurevyQuestionResulttot" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
															resultType="int">
			SELECT
			   sum(V.countNum) as totalValue
			FROM
			    t_surveyoption O left join
			    (select so_idx, COUNT(1) AS countNum from t_surveyvalue where sq_idx = #{sqIdx}
			    GROUP BY so_idx) V
			     on O.so_idx = V.so_idx
			WHERE
			    O.sq_idx= #{sqIdx}
			ORDER BY so_order ASC
	</select> -->
	<!-- <select id="getQuestionorder" parameterType="int" resultType="int">
		SELECT
		    IFNULL(MAX(sq_order), 0)+1 AS sqOrder
		FROM
		    t_surveyquestion
		WHERE
		    sv_idx= #{svIdx}
	</select> -->
	
	<!-- <select id="selectAllSurveyList" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
												resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		SELECT
			S.sv_idx, S.sv_title, S.sv_startdate, S.sv_enddate, S.regdt, S.regmemid, S.upddt, S.updmemid, S.deldt, S.delmemid, S.useyn,
			(SELECT COUNT(1) FROM t_surveyanswer IA WHERE IA.sv_idx = S.sv_idx) AS saNum
			, CASE WHEN (SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') - CAST(sv_enddate AS DATE) FROM DUAL)&lt;1 and (SELECT  CAST(sv_startdate AS DATE)-TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') FROM DUAL)&lt;1 THEN 'Y'
				ELSE 'N'
			END AS range_yn
	 		, CASE WHEN (TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD')-CAST(sv_enddate AS DATE)&gt;0) and (useyn='svstatus04' or useyn='svstatus03') THEN '1'
				ELSE '0'
			END AS isExpired
		FROM
			t_survey S
		WHERE
			delyn='N'
		ORDER BY
			sv_idx DESC
	</select> -->
	<select id="getSurevyQuestionResulttot" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
															resultType="int">
			SELECT
			   sum(V.countNum) as totalValue
			FROM
			    t_surveyoption O left join
			    (select so_idx, COUNT(1) AS countNum from t_surveyvalue where sq_idx = #{sqIdx}
			    GROUP BY so_idx) V
			     on O.so_idx = V.so_idx
			WHERE
			    O.sq_idx= #{sqIdx}
			ORDER BY so_order ASC
	</select>
	<select id="getQuestionorder" parameterType="int" resultType="int">
		SELECT
		    IFNULL(MAX(sq_order), 0)+1 AS sqOrder
		FROM
		    t_surveyquestion
		WHERE
		    sv_idx= #{svIdx}
	</select>
	
	<select id="selectAllSurveyList" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
												resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		SELECT
			S.sv_idx, S.sv_title, S.sv_startdate, S.sv_enddate, S.regdt, S.regmemid, S.upddt, S.updmemid, S.deldt, S.delmemid, S.useyn,
			(SELECT COUNT(1) FROM t_surveyanswer IA WHERE IA.sv_idx = S.sv_idx) AS saNum
			, CASE WHEN (SELECT DATE_FORMAT(NOW(), "%Y-%c-%d")) - sv_enddate )&lt;1 and (SELECT sv_startdate -DATE_FORMAT(NOW(), "%Y-%c-%d"))&lt;1 THEN 'Y'
				ELSE 'N'
			END AS range_yn
	 		, CASE WHEN (DATE_FORMAT(NOW(), "%Y-%c-%d") - sv_enddate&gt;0) and (useyn='svstatus04' or useyn='svstatus03') THEN '1'
				ELSE '0'
			END AS isExpired
		FROM
			t_survey S
		WHERE
			delyn='N'
		ORDER BY
			sv_idx DESC
	</select>
	
	<select id="selectSurveyAnswerMember" parameterType="int" resultType="itgMap">
		SELECT
			DATE_FORMAT(SA.sa_date, "%y%j%H%i%s") AS answerDate,
			SA.sa_id AS memId,
			M.name AS memName
		FROM
			t_surveyanswer SA,
			t_member M
		WHERE
			SA.sv_idx = #{svIdx}
			AND SA.sa_id = M.id(+)
		ORDER BY
			sa_date DESC
	</select>

	<update id="updateSurveyUseStat" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		UPDATE
			t_survey
		SET
			 useyn = #{useyn},
			 updmemid = #{updmemid},
			 upddt = NOW()
		WHERE
			sv_idx = #{svIdx}
	</update>
</mapper>