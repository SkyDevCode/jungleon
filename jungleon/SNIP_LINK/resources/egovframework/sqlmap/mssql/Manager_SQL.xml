<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.itgcms.core.manager.service.impl.MngrManagerMapper">

	<resultMap id="manager" type="egovframework.itgcms.core.manager.service.MngrManagerVO">
		<result property="mngId"		column="mng_id" />
		<result property="mngName"		column="mng_name" />
		<result property="mngPass"		column="mng_pass" />
		<result property="mngPhone"		column="mng_phone" />
		<result property="mngMobile"	column="mng_mobile" />
		<result property="mngEmail"		column="mng_email" />
		<result property="mngFax"		column="mng_fax" />
		<result property="groupCode"	column="group_code" />
		<result property="groupCodeName"	column="group_code_name" />
		<result property="positionCode"	column="position_code" />
		<result property="positionCodeName"	column="position_code_name" />
		<result property="mngRole"	column="mng_role" />
		<result property="mngRoleName"	column="mng_role_name" />
		<result property="mngWork"		column="mng_work" />
		<result property="siteCode"		column="site_code" />
		<result property="regdt"		column="regdt" />
		<result property="upddt"		column="upddt" />
		<result property="deldt"		column="deldt" />
		<result property="regmemid"		column="regmemid" />
		<result property="updmemid"		column="updmemid" />
		<result property="delmemid"		column="delmemid" />
		<result property="delyn"		column="delyn" />
		<result property="mngIpyn"		column="mng_ipyn" />
		<result property="mngIp"		column="mng_ip" />
		<result property="mngPassdt"	column="mng_passdt" />
		<result property="mngPasstrycnt"	column="mng_passtrycnt" />
		<result property="mngType"	column="mng_type" />
		<result property="mngAuth"	column="mng_auth" />
		<result property="mngPower"	column="mng_power" />
		<result property="mngPowerName"	column="power_name" />
	</resultMap>

	<sql id="listWhere">
				and a.delyn = 'N'
			<if test="schStr != null and schStr != ''">
		        <choose>
		            <when test="schFld == '1'.toString()">
						and	a.mng_id like '%' + #{schStr} + '%'
					</when>
		            <when test="schFld == '2'.toString()">
						and	a.mng_name like '%' + #{schStr} + '%'
					</when>
		            <when test="schFld == '3'.toString()">
						and	b.c_name like '%' + #{schStr} + '%'
					</when>
					<otherwise>
						and	(
							a.mng_id like '%' + #{schStr} + '%'
							or
							b.c_name like '%' + #{schStr} + '%'
							or
							a.mng_name like '%' + #{schStr} + '%'
							)
					</otherwise>
				</choose>
			</if>
	</sql>

	<select id="mngrManagerList" parameterType="egovframework.itgcms.core.manager.service.MngrManagerSearchVO" resultMap="manager">
	/*mngrManagerList*/
	select * from (
		select
			ceiling(row_number() over
			(
			<choose>
				<when test="ordFld != '' and ordBy != ''">
					order by
						<choose>
							<when test="ordFld == 'id'"> a.mng_id </when>
							<when test="ordFld == 'name'"> a.mng_name </when>
							<when test="ordFld == 'group'"> b.c_name </when>
							<when test="ordFld == 'regdt'"> a.regdt </when>
						</choose>
					${@egovframework.itgcms.util.CommUtil@sqlInjetFilter(ordBy)}
				</when>
				<otherwise>
					order by a.regdt desc
				</otherwise>
			</choose>
			) / cast(#{recordCountPerPage} as float)) AS page,
			a.mng_id,
			a.mng_name,
			a.mng_pass,
			a.mng_phone,
			a.mng_mobile,
			a.mng_email,
			a.mng_fax,
			a.group_code,
			a.position_code,
			a.mng_role,
			a.mng_power,
			a.mng_work,
			a.site_code_meta site_code,
			a.regdt,
			a.upddt,
			a.deldt,
			a.regmemid,
			a.updmemid,
			a.delmemid,
			a.delyn,
			a.mng_ipyn,
			a.mng_ip,
			a.mng_passdt,
			a.mng_passtrycnt,
			a.mng_type,
			a.mng_auth,
			b.c_name group_code_name,
			c.c_name position_code_name
		from t_manager a
		left join t_code b on a.group_code = b.c_code
		left join t_code c on a.position_code = c.c_code
		where 1=1
			<include refid="listWhere" />
	) tb
	where
		page = (cast(#{firstIndex} as float) / cast(#{recordCountPerPage} as float)) + 1
	</select>

	<select id="mngrManagerListTotCnt" parameterType="egovframework.itgcms.core.manager.service.MngrManagerSearchVO" resultType="int">
		/*mngrManagerListTotCnt*/
			select count(*) totcnt
			from t_manager a
			left join t_code b on a.group_code = b.c_code
		 	left join t_code c on a.position_code = b.c_code
			where 1=1
				<include refid="listWhere" />
	</select>

	<select id="mngrManagerCheckId" resultType="int">
		/*mngrManagerCheckId*/
		select count(u.cnt)
		from
		(select 1 cnt from t_manager
		where mng_id = #{id}
		union
		select 1 cnt from t_member
		where id = #{id}) as u
	</select>

	<insert id="insertMngrManagerProc" parameterType="egovframework.itgcms.core.manager.service.MngrManagerVO">
	/*insertMngrManagerProc*/
	insert into t_manager(
		mng_id,
		mng_name,
		mng_pass,
		mng_phone,
		mng_mobile,
		mng_email,
		mng_fax,
		group_code,
		position_code,
		mng_role,
		mng_power,
		mng_work,
		site_code_meta,
		regdt,
		regmemid,
		delyn,
		mng_ipyn,
		mng_ip,
		mng_passdt,
		mng_passtrycnt,
		mng_type,
		mng_auth
	 ) values(
		#{mngId},
		#{mngName},
		#{mngPass},
		#{mngPhone},
		'${@egovframework.itgcms.util.CommUtil@seedEnc256(mngMobile)}',
		'${@egovframework.itgcms.util.CommUtil@seedEnc256(mngEmail)}',
		#{mngFax},
		#{groupCode},
		#{positionCode},
		#{mngRole},
		#{mngPower},
		#{mngWork},
		#{siteCodeMeta},
		getdate(),
		#{regmemid},
		'N',
		#{mngIpyn},
   		#{mngIp},
   		getdate(),
   		'0' ,
   		#{mngType},
   		#{mngAuth}
	)
	</insert>

	<select id="mngrManagerView" parameterType="egovframework.itgcms.core.manager.service.MngrManagerSearchVO" resultMap="manager">
		/*mngrManagerView*/
		select
			a.mng_id,
			a.mng_name,
			a.mng_pass,
			a.mng_phone,
			a.mng_mobile,
			a.mng_email,
			a.mng_fax,
			a.group_code,
			a.position_code,
			a.mng_role,
			a.mng_power,
			a.mng_work,
			a.site_code_meta site_code,
			a.regdt,
			a.upddt,
			a.deldt,
			a.regmemid,
			a.updmemid,
			a.delmemid,
			a.delyn,
			a.mng_ipyn,
			a.mng_ip,
			a.mng_passdt,
			a.mng_passtrycnt,
			a.mng_type,
			a.mng_auth,
			b.c_name group_code_name,
			c.c_name position_code_name
		from t_manager a
		left join t_code b on a.group_code = b.c_code
		left join t_code c on a.position_code = c.c_code
		where
			a.delyn = 'N'
			and a.mng_id = #{id}
	</select>

	<update id="mngrManagerUpdateProc" parameterType="egovframework.itgcms.core.manager.service.MngrManagerVO">
		/*mngrManagerUpdateProc*/
		update t_manager set
		mng_email = '${@egovframework.itgcms.util.CommUtil@seedEnc256(mngEmail)}'
		<if test="mngPass != '' and mngPass != null">
			, mng_pass = #{mngPass}
		</if>
		, mng_phone = #{mngPhone}
		, mng_mobile = '${@egovframework.itgcms.util.CommUtil@seedEnc256(mngMobile)}'
		, mng_fax = #{mngFax}
		, group_code = #{groupCode}
		, position_code = #{positionCode}
		, mng_role = #{mngRole}
		, mng_power = #{mngPower}
		, mng_work = #{mngWork}
		, upddt = getdate()
		, updmemid = #{updmemid}
		, mng_ipyn = #{mngIpyn}
		, mng_ip = #{mngIp}
		, mng_type = #{mngType}
		, mng_auth = #{mngAuth}
		, site_code_meta	= #{siteCodeMeta}
		where
		delyn = 'N'
		and mng_id = #{id}
	</update>

	<update id="deleteMngrManagerProc" parameterType="egovframework.itgcms.core.manager.service.MngrManagerVO">
	 	/*deleteMngrManagerProc*/
		update t_manager set
			delyn = 'Y'
			, delmemid = #{delmemid}
			, deldt = getdate()
		where
			mng_id = #{id}

	</update>

	<update id="deleteMngrManagerChkProc" parameterType="egovframework.itgcms.core.manager.service.MngrManagerSearchVO">
		/*deleteMngrManagerChkProc*/
		update t_manager set
			delyn = 'Y'
			, delmemid = #{delmemid}
			, deldt = getdate()
		where
			mng_id  in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
				#{item}
			</foreach>
	</update>

	<update id="mngrManagerInitPass">
		/*mngrManagerInitPass*/
		update t_manager set
			mng_pass = #{mngPass}
			, mng_passtrycnt = 0
			, upddt = getdate()
			, updmemid = #{updmemid}
		where mng_id = #{id}
	</update>

	<update id="increaseMngPassTryCnt">
		/*increaseMngPassTryCnt*/
		update t_manager set
			mng_passtrycnt = #{mngPasstrycnt}
		where mng_id = #{mngId}
	</update>

	<select id="mngrManagerListAjax" resultMap="manager">
		/*mngrManagerListAjax*/
		select
			a.mng_id
			, a.mng_name
			, b.c_name
		from t_manager a
		left join t_code b on a.position_code = b.c_code
		where a.delyn = 'N'
			and (
				a.mng_name like '%' + #{schStr} + '%'
				or
				a.mng_id like '%' + #{schStr} + '%'
				or
				b.c_name like '%' + #{schStr} + '%'
			)
		order by a.mng_name
	</select>

	<select id="mngrManagerAuthPowerListAjax" resultMap="manager">
		/*mngrManagerAuthPowerListAjax*/
		select
			a.mng_id,
			a.mng_name,
			a.group_code,
			a.position_code,
			a.mng_role,
			a.mng_power,
			a.mng_work,
			a.site_code_meta site_code,
			b.c_name group_code_name
		from t_manager a
		left join t_code b on a.group_code = b.c_code
		where
			a.delyn = 'N'
			and a.mng_type = #{value}
	</select>

	<select id="mngrManagerAuthListAjax" resultMap="manager">
		/*mngrManagerAuthListAjax*/
		select
			a.MNG_ID
			,a.MNG_NAME
			,a.MNG_PASS
			,a.MNG_PHONE
			,a.MNG_MOBILE
			,a.MNG_EMAIL
			,a.MNG_FAX
			,a.GROUP_CODE
			,a.POSITION_CODE
			,a.MNG_WORK
			,a.SITE_CODE_META SITE_CODE
			,a.MNG_IPYN
			,a.MNG_IP
			,a.MNG_PASSDT
			,a.MNG_PASSTRYCNT
			,a.REGDT
			,a.UPDDT
			,a.DELDT
			,a.REGMEMID
			,a.UPDMEMID
			,a.DELMEMID
			,a.DELYN
			,a.MNG_ROLE
			,a.MNG_POWER
			,a.MNG_TYPE
			,a.MNG_AUTH
			,c.c_name group_code_name
			from t_manager a
			left join t_manager_role b on b.mr_mng_id = a.mng_id
			left join t_code c on a.group_code = c.c_code
			where b.mr_role_idx = #{mngRole}
			AND b.delyn = 'N'
	</select>

	<insert id="mngrManagerLoginLogInsert">
	/*mngrManagerLoginLogInsert*/
	insert into t_login_log(
	 log_regdt,
	 log_id,
	 log_type,
	 log_ip,
	 log_agent,
	 log_os,
	 log_device,
	 log_browser,
	 log_site
	) values (
	 getdate() ,
	 #{logId} ,
	 #{logType} ,
	 #{logIp} ,
	 #{logAgent},
	 #{logOs},
	 #{logDevice},
	 #{logBrowser},
	 #{logSite}
	)
	</insert>

	<select id="mngrChkPassBfView" resultType="String">
	/*mngrChkPassBfView*/
		select mng_pass from t_manager
		where mng_id = #{mngrId}
	</select>

	<!-- ########### Login Log ######### -->
	<sql id="listWhereLoginLog">
            <if test="schStr != null and schStr != ''">
                <choose>
                    <when test="schFld == '1'.toString()">
                        and a.log_id like '%' + #{schStr} + '%'
                    </when>
                    <otherwise>
                        and (
                            a.log_id like '%' + #{schStr} + '%'
                            )
                    </otherwise>
                </choose>
            </if>
            <if test="schSdt != null and schSdt != ''">
                and convert(char(10), log_regdt, 23) &gt;= #{schSdt}
            </if>
            <if test="schEdt != null and schEdt != ''">
                and convert(char(10), log_regdt, 23) &lt;= #{schEdt}
            </if>
            <if test="schType != null and schType != ''">
                and log_type = #{schType}
            </if>
            <if test="schSitecode != null and schSitecode != ''">
                and log_site = #{schSitecode}
            </if>
    </sql>

    <select id="selectMngrManagerLoginLogList" parameterType="egovframework.itgcms.core.manager.service.MngrManagerLoginLogSearchVO" resultType="egovframework.itgcms.core.manager.service.MngrManagerLoginLogVO">
    /*mngrManagerLoginLogList*/
	select * from (
		select
			ceiling(row_number() over (order by log_regdt desc) / cast(#{recordCountPerPage} as float)) AS page,
           a.log_regdt logRegdt,
           a.log_id logId,
           a.log_type logType,
           a.log_ip logIp,
           a.log_agent logAgent,
           a.log_os logOs,
           a.log_device logDevice,
           a.log_browser logBrowser,
           a.log_site logSite,
           CASE WHEN log_type = '1' THEN '관리자'
                WHEN log_type = '2' THEN '사용자'
           END logTypeName
       from t_login_log a
            where 1=1
            <include refid="listWhereLoginLog" />
	) tb
    <if test="excelDown != 'excel'">
	where
		page = (cast(#{firstIndex} as float) / cast(#{recordCountPerPage} as float)) + 1
    </if>
    </select>

	<select id="mngrManagerLoginLogListTotCnt" parameterType="egovframework.itgcms.core.manager.service.MngrManagerLoginLogSearchVO" resultType="int">
		/*mngrManagerLoginLogListTotCnt*/
        select count(*) totcnt
        from t_login_log a
        where 1=1
        <include refid="listWhereLoginLog" />
    </select>

	<select id="mngrManagerLoginLogAjax" resultType="egovframework.itgcms.core.manager.service.MngrManagerLoginLogVO">
	/*mngrManagerLoginLogAjax*/
	 select top 50 log_regdt logRegdt,
       log_id logId,
       log_type logType,
       log_ip logIp,
       log_agent logAgent,
       log_os logOs,
       log_device logDevice,
       log_browser logBrowser,
       log_site logSite
	from t_login_log
	where log_id = #{log_id}
	order by log_regdt desc
	</select>

	<delete id="deleteMngrManagerLoginLogProc">
		/*deleteMngrManagerLoginLogProc*/
		delete from t_login_log
		where log_regdt &gt; getdate() - 180
	</delete>

</mapper>