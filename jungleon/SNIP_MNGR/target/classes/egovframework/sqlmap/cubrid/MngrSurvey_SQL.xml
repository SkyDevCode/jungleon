<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.itgcms.module.survey.service.impl.MngrSurveyMapper">

	<sql id="pageBefore">
		SELECT * FROM
			(SELECT RN.*, ROWNUM AS RNUM, COUNT(*) OVER() AS TOTCNT FROM(
	</sql>
	<sql id="pageAfter">
		) RN
			) WHERE RNUM &gt; #{firstIndex} AND RNUM &lt;= #{lastIndex}
	</sql>

	<sql id="listWhereCondition">
		<if test="schOpt2 != null and schOpt2 != ''">
			AND (USEYN = 'svstatus01' or USEYN = 'svstatus04')
		</if>
		<choose>
			<when test='schFld == ""'>
				AND S.sv_title LIKE '%' || #{schStr} || '%'
			</when>
			<otherwise>
				AND (S.sv_title LIKE '%' || #{schStr} || '%' OR S.sv_explain LIKE '%' || #{schStr} || '%')
			</otherwise>
		</choose>
	</sql>

	<insert id="insertSurveyInfo" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		/********** insertSurveyInfo **********/
		INSERT INTO t_survey (sv_idx, sv_title, sv_explain, sv_startdate, sv_enddate, regdt, regmemid, useyn, delyn, survey_site_code)
		VALUES
		(t_survey_seq.nextval, #{svTitle}, #{svExplain}, #{svStartdate}, #{svEnddate}, CURRENT_TIMESTAMP, #{regmemid}, 'svstatus02', 'N', #{schSitecode})
		<selectKey resultType="int" keyProperty="svIdx" order="AFTER">
			SELECT t_survey_seq.currval FROM DB_ROOT
		</selectKey>
	</insert>

	<insert id="insertSurveyQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
		/********** insertSurveyQuestion **********/
		INSERT INTO t_surveyquestion
			(sq_idx, sv_idx, sq_answertype, sq_question,
			regdt, regmemid, sq_order,sq_checklimit,sq_textlimit, delyn, sq_required, etc1, etc2)
		VALUES
			(t_surveyquestion_seq.nextval, #{svIdx}, #{sqAnswertype}, #{sqQuestion},
			CURRENT_TIMESTAMP, #{regmemid}, #{sqOrder},#{sqChecklimit},#{sqTextlimit}, 'N', #{sqRequired}, #{etc1}, #{etc2})
		<selectKey resultType="int" keyProperty="sqIdx" order="AFTER">
			SELECT t_surveyquestion_seq.currval FROM DB_ROOT
		</selectKey>
	</insert>

	<insert id="insertSurveyOptions" parameterType="itgMap">
		/********** insertSurveyOptions **********/
		 INSERT INTO t_surveyoption (so_idx, sq_idx, so_content, so_order, so_value,so_inputyn, etc1, etc2)
        	SELECT t_surveyoption_seq.nextval, iData.* from
        	 <foreach item="item" collection="optionList" open="(" close=")" separator="UNION">
	            SELECT #{quIdx}, #{item.soContent}, #{item.soOrder}, #{item.soValue},#{item.soInputyn}, #{item.etc1}, #{item.etc2} FROM DB_ROOT
         </foreach>
        iData
	</insert>


	<delete id="deleteSurveyOptions" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		DELETE FROM
			t_surveyoption
		WHERE
			sq_idx in (SELECT sq_idx FROM t_surveyquestion WHERE sv_idx=#{svIdx})
	</delete>

	<delete id="deleteSurveyQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		DELETE FROM
			t_surveyquestion
		WHERE
			sv_idx = #{svIdx}
	</delete>

	<update id="updateSurveyInfo" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		UPDATE
			t_survey
		SET
			sv_title = #{svTitle},
			sv_explain = #{svExplain},
			sv_startdate = #{svStartdate},
			sv_enddate = #{svEnddate},
			sv_outline = #{svOutline},
			upddt = CURRENT_TIMESTAMP,
			updmemid = #{regmemid},
			etc1 = #{etc1},
			etc2 = #{etc2},
			survey_site_code=#{schSitecode}
		WHERE
			sv_idx = #{svIdx}
	</update>

	<select id="selectSurveyList" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
												resultType="egovframework.itgcms.module.survey.service.SurveyVO">
			<include refid="pageBefore"/>
	 	SELECT
	 		sv_idx,    sv_title,    sv_outline,    sv_explain,    sv_startdate,    sv_enddate,    useyn,   S.delyn, survey_site_code
	 		, (SELECT COUNT(1) FROM t_surveyanswer IA WHERE IA.sv_idx = S.sv_idx) AS saNum
	 		, (SELECT COUNT(1) FROM t_surveyquestion sq WHERE sq.sv_idx= s.sv_idx ) AS questionNum
	 			, CASE WHEN (SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') - CAST(sv_enddate AS DATE) FROM DB_ROOT)&lt;1 and (SELECT  CAST(sv_startdate AS DATE)-TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') FROM DB_ROOT)&lt;1 THEN 'Y'
				ELSE 'N'
			END AS range_yn
	 		, CASE WHEN (TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD')-CAST(sv_enddate AS DATE)&gt;0) and (useyn='svstatus04' or useyn='svstatus03') THEN '1'
				ELSE '0'
			END AS isExpired, c.c_name as etc1
	 	FROM
	 		t_survey S
	 		LEFT JOIN 	t_code c on S.useyn = c.c_code
	 	WHERE
	 		S.delyn='N' AND survey_site_code = #{schSitecode}
	 		<include refid="listWhereCondition"/>
	 	ORDER BY
				sv_idx DESC
		<include refid="pageAfter"/>
	</select>


	<select id="getSurveyListTotCnt" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
												resultType="int">
		SELECT
			COUNT(1)
		FROM
			t_survey S
		WHERE
			delyn='N' AND survey_site_code = #{schSitecode}
			<include refid="listWhereCondition"/>
	</select>

	<select id="selectSurveyAnswerMember" parameterType="int" resultType="itgMap">
		SELECT
			TO_CHAR(SA.sa_date, 'YYYY-MM-DD HH24:MI') AS answerDate,
			SA.sa_id AS memId,
			M.name AS memName
		FROM
			t_surveyanswer SA,
			t_member M
		WHERE
			SA.sv_idx = #{svIdx}
			AND SA.sa_id = M.id(+)
		ORDER BY
			sa_date DESC
	</select>

	<update id="updateSurveyUseStat" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		UPDATE
			t_survey
		SET
			 useyn = #{useyn},
			 updmemid = #{updmemid},
			 upddt = CURRENT_TIMESTAMP
		WHERE
			sv_idx = #{svIdx}
	</update>

	<update id="deleteSurvey" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
		UPDATE
			t_survey
		SET
			delyn = 'Y',
			delmemid = #{delmemid},
			deldt = CURRENT_TIMESTAMP
		WHERE
			sv_idx = #{svIdx}
	</update>

	<select id="getSurevyQuestionResult" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
															resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
			SELECT
			    O.so_idx, O.so_content,O.so_inputyn, NVL(V.countNum, 0) AS cnt
			FROM
			    t_surveyoption O,
			    (select so_idx, COUNT(1) AS countNum from t_surveyvalue where sq_idx = #{sqIdx}
			     <if test='etc1 != "" and etc2 != ""'>
			    	AND
			    		sa_idx
			    			IN
			    		(SELECT sa_idx from t_surveyanswer where sv_idx = #{svIdx}
			    		AND sa_date BETWEEN TO_DATETIME(#{etc1}, 'yyyy-MM-dd HH24:MI') AND TO_DATETIME(#{etc2}, 'yyyy-MM-dd HH24:MI'))
			     </if>
			    GROUP BY so_idx) V
			WHERE
			    O.sq_idx= #{sqIdx}
			    AND O.so_idx = V.so_idx(+)
			ORDER BY so_order ASC
	</select>


	<select id="getSurevyDescQuestionResult" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
																resultType="java.lang.String">
			SELECT
				so_value
			FROM
				t_surveyvalue
			WHERE
				sq_idx=#{sqIdx}
				<if test='etc1 != "" and etc2 != ""'>
				AND sa_idx
					IN
					(SELECT sa_idx FROM t_surveyanswer WHERE sq_idx =#{sqIdx}
						AND sa_date BETWEEN TO_DATETIME(#{etc1}, 'yyyy-MM-dd HH24:MI') AND TO_DATETIME(#{etc2}, 'yyyy-MM-dd HH24:MI'))
				</if>
			ORDER BY sa_idx DESC
	</select>


	<select id="getSurveyAnswerId" parameterType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO"
													resultType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO">
		/***** getSurveyAnswerId *****/
		SELECT sa.sa_id,sa.sa_idx
		FROM t_surveyanswer sa
		LEFT OUTER JOIN t_survey s ON sa.sv_idx = s.sv_idx
		WHERE  sa.sv_idx = #{svIdx}
	</select>
	<select id="getSurveyAnswerResult" parameterType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO"
													resultType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO">
		/***** getSurveyAnswerResult *****/
		SELECT  sa.sa_id,sa.sa_idx,sa.sa_id,sv.so_value, sq.sq_question, sq.sq_answertype,sq.sq_idx,(SELECT count(*) FROM t_surveyquestion WHERE sv_idx = #{svIdx}) as questionNum,
		case when sv.so_idx=0 then sv.so_value else so.so_content end as so_content
		FROM t_surveyquestion sq
		 LEFT OUTER JOIN  t_surveyanswer sa ON sq.sv_idx = sa.sv_idx
		LEFT OUTER JOIN t_surveyvalue sv ON sq.sq_idx = sv.sq_idx and sa.sa_idx = sv.sa_idx
        LEFT OUTER JOIN t_surveyoption so ON sv.so_idx = so.so_idx
		WHERE  sa.sa_id = #{saId} and  sq.sv_idx = #{svIdx}
		order by sq.sq_idx
	</select>
	<select id="getcheckboxValue" parameterType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO"
													resultType="egovframework.itgcms.module.survey.service.SurveyAnswerResultVO">
		/***** getcheckboxValue *****/
		SELECT  sa.sa_id,sa.sa_idx,sa.sa_id,sv.so_value, sq.sq_question, sq.sq_answertype,sq.sq_idx,(SELECT count(*) FROM t_surveyquestion WHERE sv_idx = #{svIdx}) as questionNum,
		case when sv.so_idx=0 then sv.so_value else so.so_content end as so_content
		FROM t_surveyquestion sq
		 LEFT OUTER JOIN  t_surveyanswer sa ON sq.sv_idx = sa.sv_idx
		LEFT OUTER JOIN t_surveyvalue sv ON sq.sq_idx = sv.sq_idx and sa.sa_idx = sv.sa_idx
        LEFT OUTER JOIN t_surveyoption so ON sv.so_idx = so.so_idx
		WHERE  sa.sa_id = #{saId} and  sq.sv_idx = #{svIdx} and  sq.sq_idx = #{sqIdx} and sq.sq_answertype='op_editable_checkbox'
		order by sq.sq_idx
	</select>
<sql id="surveyColumn">
		sv_idx,    sv_title,    sv_outline,    sv_explain,    sv_startdate,    sv_enddate,    useyn,    delyn, survey_site_code
	</sql>
	<select id="mngrSelectSurveyList" resultType="egovframework.itgcms.module.survey.service.SurveyVO" parameterType="egovframework.itgcms.module.survey.service.SurveyVO">
	 	/* mngrSelectSurveyList */
		<include refid="pageBefore"/>
		SELECT
			S.sv_idx, S.sv_title, S.sv_startdate, S.sv_enddate, S.regdt, S.regmemid, S.upddt, S.updmemid, S.deldt, S.delmemid, S.useyn,
			(SELECT COUNT(1) FROM t_surveyanswer IA WHERE IA.sv_idx = S.sv_idx) AS saNum
			, CASE WHEN (SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') - CAST(sv_enddate AS DATE) FROM DB_ROOT)&lt;1 and (SELECT  CAST(sv_startdate AS DATE)-TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') FROM DB_ROOT)&lt;1 THEN 'Y'
				ELSE 'N'
			END AS range_yn
	 		, CASE WHEN (TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD')-CAST(sv_enddate AS DATE)&gt;0) and (useyn='svstatus04' or useyn='svstatus03') THEN '1'
				ELSE '0'
			END AS isExpired, c.c_name as etc1
		FROM
			t_survey S
		 LEFT JOIN 	t_code c on S.useyn = c.c_code
		WHERE
			S.delyn='N' AND survey_site_code = #{schSitecode}
			<include refid="listWhereCondition"/>
		ORDER BY
			sv_idx DESC
		<include refid="pageAfter"/>
	 </select>

	<select id="selectSurvey"  parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
	 resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		/* selectSurvey */
		SELECT
	 		<include refid="surveyColumn"/>
	 	FROM
	 		t_survey s
	 	WHERE
	 		delyn='N'
	 		<include refid="listWhereCondition"/>
	 		AND sv_idx = #{svIdx}
	</select>

	<select id="getSurveyNoDescQuesetion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
			/* getSurveyNoDescQuesetion */
			SELECT
				sq_idx,
			    sv_idx,
			    sq_answertype,
			    sq_question,
			    regdt,
			    upddt,
			    deldt,
			    regmemid,
			    updmemid,
			    delmemid,
			    sq_order,
			    delyn,
			    sq_required,
			    etc1,
			    etc2
			FROM t_surveyquestion
			WHERE
				sq_answertype != 'desc'
				AND sv_idx=#{svIdx}
				AND delyn = 'N'
			ORDER BY sq_order ASC
	</select>

	<select id="getSurveyDescQuestion" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionVO">
			/* getSurveyDescQuestion */
			SELECT
				sq_idx,
			    sv_idx,
			    sq_answertype,
			    sq_question,
			    regdt,
			    upddt,
			    deldt,
			    regmemid,
			    updmemid,
			    delmemid,
			    sq_order,
			    delyn,
			    sq_required,
			    etc1,
			    etc2
			FROM t_surveyquestion
			WHERE
				sq_answertype = 'desc'
				AND sv_idx=#{svIdx}
				AND delyn = 'N'
			ORDER BY sq_order ASC, sq_idx asc
	</select>

	<select id="getSurvQuestionOptions" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
		resultType="egovframework.itgcms.module.survey.service.SurveyQuestionOptionVO">
		/* getSurvQuestionOptions */
		SELECT
			so_idx,
		    sq_idx,
		    so_content,
		    so_order,
		    so_value,
		    etc1,
		    etc2
		FROM t_surveyoption
		WHERE 	sq_idx=#{sqIdx}
		ORDER BY so_order ASC, so_idx ASC
	</select>

	<select id="getSurevyQuestionResulttot" parameterType="egovframework.itgcms.module.survey.service.SurveyQuestionVO"
															resultType="int">
			SELECT
			   sum(V.countNum) as totalValue
			FROM
			    t_surveyoption O left join
			    (select so_idx, COUNT(1) AS countNum from t_surveyvalue where sq_idx = #{sqIdx}
			    GROUP BY so_idx) V
			     on O.so_idx = V.so_idx
			WHERE
			    O.sq_idx= #{sqIdx}
			ORDER BY so_order ASC
	</select>
	<select id="getQuestionorder" parameterType="int" resultType="int">
		SELECT
		    NVL(MAX(sq_order), 0)+1 AS sqOrder
		FROM
		    t_surveyquestion
		WHERE
		    sv_idx= #{svIdx}
	</select>

	<select id="selectAllSurveyList" parameterType="egovframework.itgcms.module.survey.service.SurveyVO"
												resultType="egovframework.itgcms.module.survey.service.SurveyVO">
		SELECT
			S.sv_idx, S.sv_title, S.sv_startdate, S.sv_enddate, S.regdt, S.regmemid, S.upddt, S.updmemid, S.deldt, S.delmemid, S.useyn,
			(SELECT COUNT(1) FROM t_surveyanswer IA WHERE IA.sv_idx = S.sv_idx) AS saNum
			, CASE WHEN (SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') - CAST(sv_enddate AS DATE) FROM DB_ROOT)&lt;1 and (SELECT  CAST(sv_startdate AS DATE)-TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD') FROM DB_ROOT)&lt;1 THEN 'Y'
				ELSE 'N'
			END AS range_yn
	 		, CASE WHEN (TO_DATE(TO_CHAR(SYSDATE, 'YYYY/MM/DD'), 'YYYY/MM/DD')-CAST(sv_enddate AS DATE)&gt;0) and (useyn='svstatus04' or useyn='svstatus03') THEN '1'
				ELSE '0'
			END AS isExpired
		FROM
			t_survey S
		WHERE
			delyn='N'
		ORDER BY
			sv_idx DESC
	</select>
</mapper>