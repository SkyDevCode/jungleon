<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.itgcms.core.board.service.impl.BoardMapper">

	<resultMap id="board" type="itgMap">
		<result property="bdContent" column="bd_content" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="bdContentText" column="bd_content_text" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="bdAnswer" column="bd_answer" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="bdAnswerwriter" column="bd_answer_writer" />
		<result property="howUpload" column="bd_how_movie" /> <!-- 동영상 업로드 방식 -->
		<result property="noticeOrder" column="noticeOrder" />
		<result property="bdCodeName" column="bdCodeName" />	<!-- 카테고리 한글명 -->
	</resultMap>
	<resultMap id="boardLob" type="itgMap">
		<result property="blContents" column="bl_contents" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>

	<sql id="boardColums">
		a.bd_idx,
		a.bc_id,
		a.bd_code,
		a.bd_writer,
		a.bd_title,
		a.bd_content,
		a.bd_content_text,
		a.bd_readnum,
		a.bd_passwd,
		a.bd_secret,
		a.bd_htmlyn,
		a.bd_notice,
		a.bd_useyn,
		a.bd_ip,
		a.bd_phone,
		a.bd_mobile,
		a.bd_email,
		a.bd_addr1,
		a.bd_addr2,
		a.bd_reidx,
		a.bd_relevel,
		a.bd_reorder,
		CAST(A.REGDT as DATE ) AS REGDT,
		CAST(A.UPDDT as DATE ) AS UPDDT,
		CAST(A.DELDT as DATE ) AS DELDT,
		a.regmemid,
		a.updmemid,
		a.delmemid,
		a.delyn,
		a.bd_kogluseyn,
		a.bd_kogltype1,
		a.bd_kogltype2,
		a.bd_notice_termyn,
		a.bd_notice_sdt,
		a.bd_notice_edt,
		a.bd_use_termyn,
		a.bd_use_sdt,
		a.bd_use_edt,
		a.bd_sch_sdt,
		a.bd_sch_edt,
		a.bd_thumb1,
		a.bd_thumb2,
		a.bd_thumb3,
		a.bd_thumb1_alt,
		a.bd_thumb2_alt,
		a.bd_thumb3_alt,
		a.bd_answer,
		a.bd_answer_writer,
		a.group_code,
		a.file_id,
		(SELECT count(*) FROM j_attachfile WHERE file_id = a.file_id and delete_yn='N') file_cnt,
		b.c_name bdCodeName
	</sql>
	
	<!-- boardcolumnfornotice a, b가 없음 -->

	<sql id="listWhere">
				and a.bc_id = #{schBcid}
				and a.delyn = 'N'
			<if test='schBdcode != null and schBdcode != ""'>
				and b.c_code = #{schBdcode}
			</if>
			<if test='schStr != null and schStr != ""'>
		        <choose>
		            <when test="schFld == '1'.toString()">
						and	a.bd_title like concat('%' , #{schStr} , '%')
					</when>
		            <when test="schFld == '2'.toString()">
						and	a.bd_writer like concat('%' , #{schStr} , '%')
					</when>
		            <when test="schFld == '3'.toString()">
						and	a.bd_content_text like concat('%' , #{schStr} , '%')
					</when>
					<when test="schFld == '4'.toString()">
						and	a.bd_reidx =#{schStr}
					</when>
					<otherwise>
						and	(
							a.bd_title like concat('%' , #{schStr} , '%')
							or
							a.bd_writer like concat('%' , #{schStr} , '%')
							or
							a.bd_content_text like concat('%' , #{schStr} , '%')
							)
					</otherwise>
				</choose>
			</if>
			<!--  게시판 권한별  -->
			<if test="not schMngAuth.startsWith('9')">
				<choose>
	        <when test="root == '_mngr_'">
						<if test="mngrBoardconfigVO.bcMngrList == '300'"><!-- 관리자 부서만 보는 권한 -->
			        and (
			          a.group_code = #{schGroupCode}
			          or
			          a.ownId = #{schRegmemid}
			         )
						</if>
						<if test="mngrBoardconfigVO.bcMngrList == '310'"><!-- 관리자 작성자만 보는 권한 -->
			        and a.ownId = #{schRegmemid}
						</if>
	        </when>
	        <when test="root == 'user'">
						<if test="mngrBoardconfigVO.bcList == '210'"><!-- 사용자 작성자만  보는 권한 -->
			        and a.ownId = #{schRegmemid}
						</if>
	        </when>
				</choose>
			</if>

			<if test="root == 'user'"><!-- 사용자인경우 사용여부 체크에 따라 표출 설정 -->
        and a.bd_useyn = 'Y'
        and (
            ( a.bd_use_termyn = 'Y' and a.bd_use_sdt &lt; now() and a.bd_use_edt &gt; now())
            or (IFNULL(a.bd_use_termyn, 'N') = 'N')
        )
			</if>
	</sql>


	<sql id="listWhere2">
				and a.delyn = 'N'
			<if test="schStr != null and schStr != ''">
		        <choose>
		            <when test="schFld == '1'.toString()">
						and	a.bd_title like concat('%' , #{schStr} , '%')
					</when>
		            <when test="schFld == '2'.toString()">
						and	a.bd_writer like concat('%' , #{schStr} , '%')
					</when>
		            <when test="schFld == '3'.toString()">
						and	a.bd_content_text like concat('%' , #{schStr} , '%')
					</when>
					<when test="schFld == '4'.toString()">
						and	a.bd_reidx =#{schStr}
					</when>
					<otherwise>
						and	(
							a.bd_title like concat('%' , #{schStr} , '%')
							or
							a.bd_writer like concat('%' , #{schStr} , '%')
							or
							a.bd_content_text like concat('%' , #{schStr} , '%')
							)
					</otherwise>
				</choose>
			</if>
			<!--  게시판 권한별  -->
			<if test="not schMngAuth.startsWith('9')">
				<choose>
	        <when test="root == '_mngr_'">
						<if test="mngrBoardconfigVO.bcMngrList == '300'"><!-- 관리자 부서만 보는 권한 -->
			        and (
			          a.group_code = #{schGroupCode}
			          or
			          a.ownId = #{schRegmemid}
			         )
						</if>
						<if test="mngrBoardconfigVO.bcMngrList == '310'"><!-- 관리자 작성자만 보는 권한 -->
			        and a.ownId = #{schRegmemid}
						</if>
	        </when>
	        <when test="root == 'user'">
						<if test="mngrBoardconfigVO.bcList == '210'"><!-- 사용자 작성자만  보는 권한 -->
			        and a.ownId = #{schRegmemid}
						</if>
	        </when>
				</choose>
			</if>

			<if test="root == 'user'"><!-- 사용자인경우 사용여부 체크에 따라 표출 설정 -->
        and a.bd_useyn = 'Y'
        and (
            ( a.bd_use_termyn = 'Y' and a.bd_use_sdt &lt; now() and a.bd_use_edt &gt; now())
            or (IFNULL(a.bd_use_termyn, 'N') = 'N')
        )
			</if>
	</sql>


	<select id="noticeList" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultMap="board">
		/* noticeList >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
		(select
				<include refid="boardColums" />
		 from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
				LEFT JOIN t_code B ON a.bd_code = B.c_code
	     where
	     		a.bd_notice = '1'
	        	and ((bd_notice_termyn = 'Y' and (bd_notice_sdt &lt; now() and bd_notice_edt &gt; now())) or (bd_notice = '1' and IFNULL(bd_notice_termyn, 'N') = 'N'))
	     order by
	     		a.bd_idx desc
		) UNION

		(select
				<include refid="boardColums" />
          from
	       	 	( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
	        	LEFT JOIN t_code B ON a.bd_code = B.c_code
          where
          		a.bd_notice = '2'
		    	and ((bd_notice_termyn = 'Y' and (bd_notice_sdt &lt;  now() and bd_notice_edt &gt; now())) or (bd_notice = '2' and IFNULL(bd_notice_termyn, 'N') = 'N'))
		    	and a.bc_id in(select m.menu_subtype from t_menu as m where m.menu_sitecode=#{siteCode})
		  order by
		  		a.bd_idx desc
		) UNION

		(select
				<include refid="boardColums" />
	        from
	        	( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
	        	LEFT JOIN t_code B ON a.bd_code = B.c_code
	        where
	        	a.bd_notice = '3'
	        	and ((bd_notice_termyn = 'Y' and (bd_notice_sdt &lt;  now() and bd_notice_edt &gt; now())) or (bd_notice = '3' and IFNULL(bd_notice_termyn, 'N') = 'N'))
	        	and a.bc_id=#{schBcid}
			order by
				a.bd_idx desc
		)
	</select>


	<select id="boardList" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultMap="board">
	/* boardList >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
		select
			<include refid="boardColums" />
			, 0 as noticeOrder
			<!-- case when (bd_notice > 0 and bd_notice_termyn = 'Y' and bd_notice_sdt &lt; now() and bd_notice_edt &gt; now() ) or (bd_notice = 'Y'  and IFNULL(bd_notice_termyn, 'N') = 'N')
				then 1 ELSE 0 end noticeOrder -->
		from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
		LEFT JOIN t_code B ON a.bd_code = B.c_code
			where 1=1
			<include refid="listWhere" />
			<choose>
				<when test="ordFld != '' and ordBy != ''">
					order by
						noticeOrder desc
						<choose>
							<when test="ordFld == 'title'"> , a.bd_title </when>
							<when test="ordFld == 'writer'"> , a.bd_writer </when>
							<when test="ordFld == 'regdt'"> , a.regdt </when>
							<when test="ordFld == 'readnum'"> , a.bd_readnum </when>
							<otherwise>
								, a.bd_reidx desc , a.bd_reorder asc
							</otherwise>
						</choose>
					${@egovframework.itgcms.util.CommUtil@sqlInjetFilter(ordBy)}
				</when>
				<otherwise>
					order by a.bd_reidx desc , a.bd_reorder asc
				</otherwise>
			</choose>
			limit #{recordCountPerPage} offset #{firstIndex}
	</select>

	<select id="boardListTotCnt" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultType="int">

			select count(*) totcnt
			from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
			LEFT JOIN t_code B ON a.bd_code = B.c_code
			where 1=1
				<include refid="listWhere" />
	</select>
	<select id="boardCheckId" resultType="int">
		select count(*) cnt from t_board
		where bc_id = #{id}
	</select>

	<insert id="boardRegistProc" parameterType="itgMap">
		<selectKey resultType="String" keyProperty="bdIdx" order="BEFORE">
			select ifnull(max(bd_idx), 0) + 1 from t_board
		</selectKey>
	insert into t_board(
		bd_idx,
		bc_id,
		bd_code,
		bd_writer,
		bd_title,
		bd_content,
		bd_content_text,
		bd_readnum,
		bd_passwd,
		bd_secret,
		bd_notice,
		bd_useyn,
		bd_ip,
		bd_phone,
		bd_mobile,
		bd_email,
		bd_addr1,
		bd_addr2,
		bd_reidx,
		bd_relevel,
		bd_reorder,
		regdt,
		regmemid,
		delyn,
		bd_kogluseyn,
		bd_kogltype1,
		bd_kogltype2,
		bd_notice_termyn,
		bd_notice_sdt,
		bd_notice_edt,
		bd_use_termyn,
		bd_use_sdt,
		bd_use_edt,
		bd_thumb1,
		bd_thumb2,
		bd_thumb3,
		bd_thumb1_alt,
		bd_thumb2_alt,
		bd_thumb3_alt,
		bd_answer,
    bd_answer_writer,
		group_code,
		file_id,
		bd_movie,
		bd_how_movie
	)values(
		#{bdIdx},
		#{schBcid},
		#{bdCode},
		#{bdWriter},
		#{bdTitle},
		#{bdContent},
		#{bdContentText},
		0,
		#{bdPasswd},
		#{bdSecret},
		#{bdNotice},
		#{bdUseyn},
		#{bdIp},
		#{bdPhone},
		#{bdMobile},
		#{bdEmail},
		#{bdAddr1},
		#{bdAddr2},
		#{bdIdx},
		0,
		0,
		Now(),
		#{regmemid},
		'N',
		#{bdKogluseyn},
		#{bdKogltype1},
		#{bdKogltype2},
		#{bdNoticeTermyn},
		#{bdNoticeSdt},
		#{bdNoticeEdt},
		#{bdUseTermyn},
		#{bdUseSdt},
		#{bdUseEdt},
		#{bdThumb1},
		#{bdThumb2},
		#{bdThumb3},
		#{bdThumb1Alt},
		#{bdThumb2Alt},
		#{bdThumb3Alt},
		#{bdAnswer},
    #{bdAnswerwriter},
		#{groupCode},
		#{fileId},
		#{bdMovie},
		#{howUpload}
	)

	</insert>

	<insert id="boardReplyProc" parameterType="itgMap">
	  <selectKey resultType="String" keyProperty="bdIdx" order="BEFORE">
      select ifnull(max(bd_idx), 0) + 1 from t_board
    </selectKey>
	insert into t_board(
		bd_idx,
		bc_id,
		bd_code,
		bd_writer,
		bd_title,
		bd_content,
		bd_content_text,
		bd_readnum,
		bd_passwd,
		bd_secret,
		bd_notice,
		bd_useyn,
		bd_ip,
		bd_phone,
		bd_mobile,
		bd_email,
		bd_addr1,
		bd_addr2,
		bd_reidx,
		bd_relevel,
		bd_reorder,
		regdt,
		regmemid,
		delyn,
		bd_kogluseyn,
		bd_kogltype1,
		bd_kogltype2,
		bd_notice_termyn,
		bd_notice_sdt,
		bd_notice_edt,
		bd_use_termyn,
		bd_use_sdt,
		bd_use_edt,
		bd_thumb1,
		bd_thumb2,
		bd_thumb3,
		bd_thumb1_alt,
		bd_thumb2_alt,
		bd_thumb3_alt,
		bd_answer,
    bd_answer_writer,
		group_code,
		file_id
	)values(
		#{bdIdx},
		#{schBcid},
		#{bdCode},
		#{bdWriter},
		#{bdTitle},
		#{bdContent},
		#{bdContentText}
		0,
		#{bdPasswd},
		#{bdSecret},
		#{bdNotice},
		#{bdUseyn},
		#{bdIp},
		#{bdPhone},
		#{bdMobile},
		#{bdEmail},
		#{bdAddr1},
		#{bdAddr2},
		#{bdReidx},
		#{bdRelevel},
		#{bdReorder},
		Now(),
		#{regmemid},
		'N',
		#{bdKogluseyn},
		#{bdKogltype1},
		#{bdKogltype2},
		#{bdNoticeTermyn},
		#{bdNoticeSdt},
		#{bdNoticeEdt},
		#{bdUseTermyn},
		#{bdUseSdt},
		#{bdUseEdt},
		#{bdThumb1},
		#{bdThumb2},
		#{bdThumb3},
		#{bdThumb1Alt},
		#{bdThumb2Alt},
		#{bdThumb3Alt},
		#{bdAnswer},
    #{bdAnswerwriter},
		#{groupCode},
		#{fileId}
	)
	</insert>


	<update id="boardReplyUpdateReorder" parameterType="itgMap">
	  update t_board set
	    bd_reorder = bd_reorder + 1
	  where
      delyn = 'N'
      and bd_reidx = #{bdReidx}
      and bc_id = #{schBcid}
      and bd_reorder &gt;= #{bdReorder}
	</update>


	<select id="boardView" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultMap="board">
	/* select boardView */
		select
			a.bd_idx,
			a.bc_id,
			a.bd_code,
			a.bd_writer,
			a.bd_title,
			a.bd_content,
			a.bd_content_text,
			a.bd_readnum,
			a.bd_passwd,
			a.bd_secret,
			a.bd_notice,
			a.bd_useyn,
			a.bd_ip,
			a.bd_phone,
			a.bd_mobile,
			a.bd_email,
			a.bd_addr1,
			a.bd_addr2,
			a.bd_reidx,
			a.bd_relevel,
			a.bd_reorder,
			a.regdt,
			a.upddt,
			a.deldt,
			a.regmemid,
			a.updmemid,
			a.delmemid,
			a.delyn,
			a.bd_kogluseyn,
			a.bd_kogltype1,
			a.bd_kogltype2,
			a.bd_notice_termyn,
			a.bd_notice_sdt,
			a.bd_notice_edt,
			a.bd_use_termyn,
			a.bd_use_sdt,
			a.bd_use_edt,
			a.bd_thumb1,
			a.bd_thumb2,
			a.bd_thumb3,
			a.bd_thumb1_alt,
			a.bd_thumb2_alt,
			a.bd_thumb3_alt,
			a.bd_answer,
      a.bd_answer_writer,
			a.group_code,
			a.file_id,
			a.bd_movie,
			a.bd_how_movie,
			a.bd_ext1,
			a.bd_ext2,
			a.bd_ext3,
			a.bd_ext4,
			a.bd_ext5,
			a.bd_ext6,
			a.bd_ext7,
			a.bd_ext8,
			a.bd_ext9,
			a.bd_ext10,
			a.bd_ext11,
			a.bd_ext12,
			b.c_name bdCodeName
		from t_board a
		LEFT JOIN t_code B ON a.bd_code = b.c_code
		where
			a.delyn = 'N'
			and a.bd_idx = #{id}
			and a.bc_id = #{schBcid}
	</select>

	<select id="getPrevBoardVO" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO"  resultType="itgMap">
	 /* getPrevBoardVO */
	 select
      a.bd_idx bdIdx,
      a.bc_id bcId,
      a.bd_writer bdWriter,
      a.bd_title bdTitle,
      a.bd_reidx bdReidx,
      a.bd_thumb1 bdThumb1,
      a.bd_thumb1 bdThumb2,
      a.bd_thumb1 bdThumb3,
      a.bd_thumb1_alt bdThumb1Alt,
      a.bd_thumb1_alt bdThumb2Alt,
      a.bd_thumb1_alt bdThumb3Alt,
      a.regdt,
      a.group_code groupCode,
      a.file_id fileId,
      b.c_name bdCodeName,
      case when (bd_notice = 'Y'
     and bd_notice_termyn = 'Y' and bd_notice_sdt &lt; now() and bd_notice_edt &gt; now() ) or( bd_notice = 'Y'  and bd_notice_termyn = 'N')
  then 1 ELSE 0 end noticeOrder

    from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
    LEFT JOIN t_code B ON a.bd_code = b.c_code
    where 1=1
    <include refid="listWhere" />
      and a.bd_reidx &gt;(select bd_reidx from t_board where bc_id=#{schBcid} and bd_idx = #{id})

      order by a.bd_reidx asc, a.bd_reorder desc limit 1


	</select>

	<select id="getNextBoardVO" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultType="itgMap">
	 /* getNextBoardVO */
	 select
      a.bd_idx bdIdx,
      a.bc_id bcId,
      a.bd_writer bdWriter,
      a.bd_title bdTitle,
      a.bd_reidx bdReidx,
      a.bd_htmlyn htmlYn,
      a.bd_thumb1 bdThumb1,
      a.bd_thumb1 bdThumb2,
      a.bd_thumb1 bdThumb3,
      a.bd_thumb1_alt bdThumb1Alt,
      a.bd_thumb1_alt bdThumb2Alt,
      a.bd_thumb1_alt bdThumb3Alt,
      a.regdt,
      a.group_code groupCode,
      a.file_id fileId,
      b.c_name bdCodeName,
      case when (bd_notice = 'Y'
     and bd_notice_termyn = 'Y' and bd_notice_sdt &lt; now() and bd_notice_edt &gt; now() ) or( bd_notice = 'Y'  and bd_notice_termyn = 'N')
  then 1 ELSE 0 end noticeOrder
    from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
    LEFT JOIN t_code B ON a.bd_code = b.c_code
    where 1=1
    <include refid="listWhere" />

      and a.bd_reidx &lt;(select bd_reidx from t_board where bc_id=#{schBcid} and bd_idx = #{id})

      order by a.bd_reidx desc, a.bd_reorder asc limit 1

	</select>

	<update id="increaseReadnum">
	 update t_board set
	   bd_readnum = bd_readnum + 1
	 where
	   delyn = 'N'
      and bd_idx = #{id}
      and bc_id = #{schBcid}
	</update>
	<update id="boardUpdateProc" parameterType="itgMap">
		update t_board set
			bd_code = #{bdCode},
			bd_title = #{bdTitle},
			bd_content = #{bdContent},
			bd_content_text = #{bdContentText},
			bd_secret = #{bdSecret},
			bd_notice = #{bdNotice},
			bd_useyn = #{bdUseyn},
			bd_phone = #{bdPhone},
			bd_mobile = #{bdMobile},
			bd_email = #{bdEmail},
			bd_addr1 = #{bdAddr1},
			bd_addr2 = #{bdAddr2},
			<!-- bd_reidx = #{bdReidx},
			bd_relevel = #{bdRelevel},
			bd_reorder = #{bdReorder}, -->
			upddt = Now(),
			updmemid = #{updmemid},
			bd_kogluseyn = #{bdKogluseyn},
			bd_kogltype1 = #{bdKogltype1},
			bd_kogltype2 = #{bdKogltype2},
			bd_notice_termyn = #{bdNoticeTermyn},
			bd_notice_sdt = #{bdNoticeSdt},
			bd_notice_edt = #{bdNoticeEdt},
			bd_use_termyn = #{bdUseTermyn},
			bd_use_sdt = #{bdUseSdt},
			bd_use_edt = #{bdUseEdt},
			bd_thumb1 = #{bdThumb1},
			bd_thumb2 = #{bdThumb2},
			bd_thumb3 = #{bdThumb3},
			bd_thumb1_alt = #{bdThumb1Alt},
			bd_thumb2_alt = #{bdThumb2Alt},
			bd_thumb3_alt = #{bdThumb3Alt},
			bd_answer = #{bdAnswer},
      bd_answer_writer = #{bdAnswerwriter},
			group_code = #{groupCode},
			file_id = #{fileId},
			bd_movie = #{bdMovie},
			bd_how_movie = #{howUpload},
			bd_ext1 = #{bdExt1},
			bd_ext2 = #{bdExt2},
			bd_ext3 = #{bdExt3},
			bd_ext4 = #{bdExt4},
			bd_ext5 = #{bdExt5},
			bd_ext6 = #{bdExt6},
			bd_ext7 = #{bdExt7},
			bd_ext8 = #{bdExt8},
			bd_ext9 = #{bdExt9},
			bd_ext10 = #{bdExt10},
			bd_ext11 = #{bdExt11},
			bd_ext12 = #{bdExt12}
		where
			delyn = 'N'
			and bd_idx = #{id}
			and bc_id = #{schBcid}

	</update>

	<update id="boardAutoDeleteProc" parameterType="egovframework.itgcms.core.boardconfig.service.MngrBoardconfigVO">
		/* boardAutoDeleteProc */
		update t_board set
			bc_id = #{bcId}
			, delyn = 'Y'
			, delmemid = #{delmemid}
			, deldt = NOW()
		where
			bc_id = #{id}
	</update>

	<update id="boardChkAutoDeleteProc" parameterType="egovframework.itgcms.core.boardconfig.service.MngrBoardconfigVO">
		/* boardChkAutoDeleteProc */
		update t_board set
			bc_id   = CONCAT(bc_id ,DATE_FORMAT(now(), '%y%j%H%i%s'))
			, delyn = 'Y'
			, delmemid = #{delmemid}
			, deldt = NOW()
		where
			bc_id  in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
				#{item}
			</foreach>
	</update>

	<update id="boardDeleteProc" parameterType="itgMap">
		/* boardDeleteProc */
		update t_board set
			delyn = 'Y'
			, delmemid = #{schRegmemid}
			, deldt = NOW()
		where
			bd_idx = #{id}
			and bc_id = #{schBcid}
	</update>
	<update id="boardChkDelProc" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO">
		/* boardChkDelProc */
		update t_board set
			delyn = 'Y'
			, delmemid = #{delmemid}
			, deldt = NOW()
		where
			bd_idx  in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
				#{item}
			</foreach>
			and bc_id = #{schBcid}

	</update>

	<update id="boardChkDelProcJFile" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO">
		/* boardChkDelProcJFile */
		update j_attachfile set
			DELETE_YN = 'Y'
		where
			file_id in
			 ( select file_id from t_board where bd_idx in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
				#{item}
			</foreach>
			and bc_id = #{schBcid}
			)
	</update>

	<select id="boardListAjax" resultMap="board">
		select
			a.bd_idx
			, a.bc_id
			, a.bd_title
			, a.bd_content
			, a.bd_content_text
			, a.bd_htmlyn
		from t_board a
		where a.delyn = 'N'
		<if test="schStr != null and schStr != ''">
			and (
				a.bd_title like concat('%' , #{schStr} , '%')
				or
				a.bd_content_text like concat('%' , #{schStr} , '%')
			)
		</if>
		order by a.regdt desc
	</select>

	<select id="boardMainList" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultType="itgMap">
  /* boardMainList */
    select
      a.bd_idx bdIdx,
      a.bc_id bdId,
      a.bd_code bdCode,
      a.bd_writer bdWriter,
      a.bd_title bdTitle,
      a.bd_content bdContent,
      a.bd_content bdContentText,
      a.bd_htmlyn htmlYn,
      a.bd_readnum bdReadnum,
      a.bd_thumb1 bdThumb1,
      a.bd_thumb2 bdThumb2,
      a.bd_thumb3 bdThumb3,
      a.bd_thumb1_alt bdThumb1Alt,
      a.bd_thumb2_alt bdThumb2Alt,
      a.bd_thumb3_alt bdThumb3Alt,
      a.regdt,
      a.regmemid,
      a.file_id,
      (select count(*) from j_attachfile where file_id = a.file_id and delete_yn = 'N') fileCnt,
      b.c_name bdCodeName,

      case when (bd_notice = 'Y'
     and bd_notice_termyn = 'Y' and bd_notice_sdt &lt; now() and bd_notice_edt &gt; now() ) or( bd_notice = 'Y'  and IFNULL(bd_notice_termyn, 'N') = 'N')
  then 1 ELSE 0 end noticeOrder
    from t_board a
    LEFT JOIN t_code B ON a.bd_code = B.c_code
      where 1=1
      and a.bc_id = #{schBcid}
      and a.delyn = 'N'
      and a.bd_useyn = 'Y'
      and (
            ( a.bd_use_termyn = 'Y' and a.bd_use_sdt &lt; now() and a.bd_use_edt &gt; now())
            or (IFNULL(a.bd_use_termyn, 'N') = 'N')
        )
      order by a.bd_reidx desc, a.bd_reorder desc
      limit #{firstIndex}, #{lastIndex}
  </select>

  	<select id="boardRegInfo" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultType="itgMap">
  	/* select boardRegInfo */
		select
			a.bd_idx,
			a.bc_id,
			a.regmemid,
			a.group_code,
			a.ownId,
			a.bd_secret,
			a.bd_passwd
		from ( select *,if(d.bd_relevel = '0',d.regmemid,(select c.regmemid from t_board c where c.bd_idx = d.bd_reidx)) ownId from t_board d) a
		where
			a.delyn = 'N'
			and a.bd_idx = #{id}
			and a.bc_id = #{schBcid}
	</select>


	<!-- <select id="searchAll" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultMap="board">
	/* searchAll >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
		select
			bd_idx,
			bc_id,
			bd_code,
			bd_writer,
			bd_title,
			bd_content,
			bd_readnum,
			bd_passwd,
			bd_secret,
			bd_notice,
			bd_useyn,
			bd_ip,
			bd_phone,
			bd_mobile,
			bd_email,
			bd_addr1,
			bd_addr2,
			bd_reidx,
			bd_relevel,
			bd_reorder,
			regdt,
			upddt,
			deldt,
			regmemid,
			updmemid,
			delmemid,
			delyn,
			bd_kogluseyn,
			bd_kogltype1,
			bd_kogltype2,
			bd_notice_termyn,
			bd_notice_sdt,
			bd_notice_edt,
			bd_use_termyn,
			bd_use_sdt,
			bd_use_edt,
			bd_thumb1,
			bd_thumb2,
			bd_thumb3,
			bd_thumb1_alt,
			bd_thumb2_alt,
			bd_thumb3_alt,
			bd_answer,
	   		bd_answer_writer,
			group_code,
			file_id
		from
		t_board a
		where 1=1
		and	((bd_title) like concat('%' , #{schStr} , '%') or
		(bd_content) like concat('%' , #{schStr} , '%'))
		and bc_id = #{bcId}
		and delyn = 'N'
		order by bd_reidx desc , bd_reorder asc
		limit #{recordCountPerPage}
	</select> -->

	<select id="searchAll" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultMap="board">
	/* searchAll >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
		select
			a.bd_idx,
			a.bc_id,
			a.bd_code,
			a.bd_writer,
			a.bd_title,
			a.bd_content,
			a.bd_readnum,
			a.bd_passwd,
			a.bd_secret,
			a.bd_notice,
			a.bd_useyn,
			a.bd_ip,
			a.bd_phone,
			a.bd_mobile,
			a.bd_email,
			a.bd_addr1,
			a.bd_addr2,
			a.bd_reidx,
			a.bd_relevel,
			a.bd_reorder,
			a.regdt,
			a.upddt,
			a.deldt,
			a.regmemid,
			a.updmemid,
			a.delmemid,
			a.delyn,
			a.bd_kogluseyn,
			a.bd_kogltype1,
			a.bd_kogltype2,
			a.bd_notice_termyn,
			a.bd_notice_sdt,
			a.bd_notice_edt,
			a.bd_use_termyn,
			a.bd_use_sdt,
			a.bd_use_edt,
			a.bd_thumb1,
			a.bd_thumb2,
			a.bd_thumb3,
			a.bd_thumb1_alt,
			a.bd_thumb2_alt,
			a.bd_thumb3_alt,
			a.bd_answer,
	   		a.bd_answer_writer,
			a.group_code,
			a.file_id,
			#{schSite} as schSitecode
		from
		t_board a
		where 1=1
		and	((a.bd_title) like concat('%' , #{schStr} , '%') or
		(a.bd_content) like concat('%' , #{schStr} , '%'))
		and a.bc_id = #{bcId}
		and a.delyn = 'N'
		order by a.bd_reidx desc , a.bd_reorder asc
		limit #{recordCountPerPage}
	</select>


	<select id="searchAllCnt" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO" resultType="String">
	/* searchAllCnt >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/
		select
		count(*)
		from
		t_board
		where 1=1
		and	((bd_title) like concat('%' , #{schStr} , '%') or
		(bd_content) like concat('%' , #{schStr} , '%'))
		and bc_id = #{bcId}
		and delyn = 'N'
	</select>

	<select id="boardListAll" parameterType="egovframework.itgcms.core.boardconfig.service.MngrBoardconfigVO" resultType="itgMap">
  	/* select boardListAll */
		select
			a.bd_idx,
			a.bc_id,
			a.file_id
		from t_board a
		where a.bc_id = #{bcId}
	</select>
	<select id="chkBoardListAll" parameterType="egovframework.itgcms.core.boardconfig.service.MngrBoardconfigVO" resultType="itgMap">
  	/* select boardListAll */
		select
			a.bd_idx,
			a.bc_id,
			a.file_id
		from t_board a
		where a.bc_id in
			<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
				#{item}
			</foreach>
	</select>

	<select id="rssBoardList" resultType="itgMap">
	/** rssBoardList **/
		SELECT
			bd_idx,
		    bd_writer,
		    bd_title,
		    regdt,
		    regmemid
		FROM t_board
		WHERE
			 bc_id= (select menu_subtype from t_menu where menu_code=#{menuCode})
		ORDER BY bd_idx DESC
	</select>

	<select id="mngrBoardListForExcel" resultType="itgMap">
	/* mngrBoardListForExcel */
		SELECT
		    bd_writer,
		    bd_title,
		    bd_content,
		    bd_content_text,
		    bd_htmlyn,
		    bd_readnum,
		    bd_ip,
		    regdt,
		    upddt,
		    deldt,
		    regmemid,
		    updmemid,
		    delmemid
		FROM t_board
		WHERE
			delyn='N'
		    and bc_id=#{menuCode}
		ORDER BY bd_idx desc
	</select>

	<select id="boardPassCheck" resultMap="board">
	/* boardPassCheck */
		SELECT
			bd_idx,
		    bc_id,
		    bd_code,
		    bd_writer,
		    bd_title,
		    bd_content,
		    bd_content_text,
			bd_htmlyn,
		    bd_readnum,
		    bd_passwd,
		    bd_secret,
		    bd_notice,
		    bd_useyn,
		    bd_ip,
		    bd_phone,
		    bd_mobile,
		    bd_email,
		    bd_addr1,
		    bd_addr2,
		    bd_reidx,
		    bd_relevel,
		    bd_reorder,
		    bd_kogluseyn,
		    bd_kogltype1,
		    bd_kogltype2,
		    regdt,
		    upddt,
		    deldt,
		    regmemid,
		    updmemid,
		    delmemid,
		    delyn,
		    bd_notice_sdt,
		    bd_notice_edt,
		    bd_use_sdt,
		    bd_use_edt,
		    file_id,
		    bd_use_termyn,
		    bd_notice_termyn,
		    group_code,
		    bd_thumb1,
		    bd_thumb2,
		    bd_thumb3,
		    bd_thumb1_alt,
		    bd_thumb2_alt,
		    bd_thumb3_alt,
		    bd_answer,
		    bd_answer_writer,
		    bd_movie,
		    bd_how_movie
		FROM
			t_board
		WHERE
			bd_idx = #{bdIndex}
			AND
			bd_passwd = #{pass}
	</select>

		<select id="mainContentsMenuCode" parameterType="egovMap" resultType="egovframework.itgcms.core.board.service.MainBoardVO">
	/*** popupMainContentsMenuCode ***/
		SELECT
			m.menu_code AS anchorHref,
			m.menu_name AS boardTitle,
			m.menu_memo AS boardMemo,
			bc.bc_skin AS boardSkin
		FROM
			t_menu m, t_board_config bc
		WHERE m.delyn = 'N' AND bc.delyn = 'N'
			AND bc.bc_id = m.menu_subtype
			AND m.menu_code = #{menuCode}
			AND m.menu_sitecode = #{siteCode}
	</select>

	<select id="latestBbsList" resultType="itgMap" >
	/* latestBbsList */
		SELECT
			b.bd_idx, b.bc_id, m.menu_code as etc1, b.bd_writer, b.bd_title, b.bd_readnum, b.regdt, m.menu_name as etc2
		 FROM t_board AS b, t_menu as m
 		WHERE b.delyn = 'N' and m.delyn = 'N'
 			AND b.bc_id = m.menu_subType
		<if test="menuCode != null and root != null">
 			 AND b.bc_id = (select m.menu_subType from t_menu m where m.menu_code = #{menuCode} and m.menu_sitecode = #{root})
 		 </if>
 		 <if test="root != null and root != 'all'">
 		 	AND m.menu_sitecode = #{root}
 		 </if>
 		  AND b.bd_relevel = 0
 		  group by b.bd_idx, b.bc_id, m.menu_code, b.bd_writer, b.bd_title, b.bd_readnum, b.regdt, m.menu_name
 		ORDER BY b.bd_notice desc, b.bd_idx desc
 		<if test="limitNum != null">
 		limit 0, #{limitNum}
 		</if>
	</select>

	<select id="getReplyTotCnt" resultType="int">
		select
			count(cnt)
		from
		(select
			a.bd_idx,
			a.bc_id,
			a.bd_writer,
			a.bd_title,
			a.regdt,
			max(tb.bd_idx) max_bd_idx,
			count(tb.bd_idx) as cnt,
			tm.menu_code,
			tm.menu_name
		from  t_board a
			LEFT JOIN t_menu TM ON tm.menu_subtype = a.bc_id and tm.delyn='N' and TM.MENU_USEYN = 'Y'
			LEFT JOIN t_board tb ON tb.delyn = 'N' and tb.bd_reidx = a.bd_idx and tb.bd_relevel > 0
		where
			a.regmemid=#{schRegmemid}
			AND tm.menu_sitecode = 'web'
			AND a.delyn = 'N'
			GROUP BY a.bd_idx, a.bc_id, a.bd_writer, a.bd_title, a.regdt, tb.bd_reidx, tm.menu_code, tm.menu_name
		) as c
		where c.cnt > 0
	</select>

	<select id="getReplyList" resultType="itgMap">
	/** getReplyList **/
		select
			c.bd_idx,
		    c.bc_id,
		    c.bd_writer,
		    c.bd_title,
			c.regdt,
			c.cnt,
		   	c.menu_code.
		   	c.menu_name,
		    tb2.bd_writer recent_name,
		    tb2.regdt recent_dt
		from
		(select
			a.bd_idx,
		    a.bc_id,
		    a.bd_writer,
		    a.bd_title,
			a.regdt,
		    max(tb.bd_idx) max_bd_idx,
			count(tb.bd_idx) as cnt,
			tm.menu_code,
			tm.menu_name
		from  t_board a
			LEFT JOIN t_menu TM ON tm.menu_subtype = a.bc_id and tm.delyn = 'N' and TM.MENU_USEYN = 'Y' 
			LEFT JOIN t_board tb ON tb.delyn='N' and tb.bd_reidx = a.bdidx and tb.bd_relevel > 0
		where
			a.regmemid=#{schRegmemid}
			<if test="siteCode != 'all' ">
				AND tm.menu_sitecode = #{siteCode}
			</if>
			<include refid="listWhere2"/>
			GROUP BY a.bd_idx, a.bc_id, a.bd_writer, a.bd_title, a.regdt, tb.bd_reidx, tm.menu_code, tm.menu_name
		) as c
		LEFT JOIN t_board tb2 ON tb2.bd_idx = c.max_bd_idx
		where c.cnt > 0
		order by recent_dt desc, menu_code desc
		limit #{recordCountPerPage} offset #{firstIndex}
	</select>


	<select id="getCommentTotCnt" resultType="int">
		select
			count(cnt)
		from
		(select
			a.bd_idx,
			a.bc_id,
			a.bd_writer,
			a.bd_title,
			a.regdt,
			max(tc.c_idx) max_c_idx,
	        count(tc.c_idx) as cnt,
	        tm.menu_code,
	        tm.menu_name
		from  t_board a
			LEFT JOIN t_menu TM ON tm.menu_subtype = a.bc_id and tm.delyn = 'N' and tm.menu_useyn = 'Y'
			LEFT JOIN t_comment tc ON tc.delyn = 'N' and tc.bd_idx = a.bd_idx
		where
			a.regmemid=#{schRegmemid}
			<if test="siteCode != 'all' ">
				AND tm.menu_sitecode = #{siteCode}
			</if>
			<include refid="listWhere2"/>
			GROUP BY a.bd_idx, a.bc_id, a.bd_writer, a.bd_title, a.regDt, tc.bd_idx, tm.menu_code, tm.menu_name
		) as c
		where c.cnt > 0
	</select>

	<select id="getCommentList" resultType="itgMap">
	/** getCommentList **/

		select
			c.bd_idx,
		    c.bc_id,
		    c.bd_writer,
		    c.bd_title,
			c.regdt,
		    c.cnt,
		    c.menu_code,
		    c.menu_name,
		    tc2.c_writer recent_name,
		    tc2.regdt recent_dt
		from
		(select
			a.bd_idx,
		    a.bc_id,
		    a.bd_writer,
		    a.bd_title,
			a.regdt,
			max(tc.c_idx) max_c_idx,
	        count(tc.c_idx) as cnt,
	        tm.menu_code,
	        tm.menu_name
		from  t_board a
			LEFT JOIN t_menu TM ON tm.menu_subtype = a.bc_id and tm.delyn='N' and TM.MENU_USEYN ='Y'
	      	LEFT JOIN t_comment tc ON tc.delyn='N' AND tc.bd_idx = a.bd_idx
		where
			a.regmemid=#{schRegmemid}
			<if test="siteCode != 'all' ">
				AND tm.menu_sitecode = #{siteCode}
			</if>
			<include refid="listWhere2"/>
			GROUP BY a.bd_idx, a.bc_id, a.bd_writer, a.bd_title, a.regdt, tc.bd_idx, tm.menu_code, tm.menu_name
		) as c
		LEFT JOIN t_comment tc2 ON tc2.c_idx = c.max_c_idx
		where c.cnt > 0
		order by recent_dt desc, menu_code desc
		limit #{recordCountPerPage} offset #{firstIndex}
	</select>

	<!-- 여기서 부터는 cms307 새로운 쿼리문 추가 -->
	
	<update id="boardReplyDeleteProc" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO">
	/** boardReplyDeleteProc **/
		UPDATE t_board SET
		delyn = 'Y'
		, delmemid = #{schRegmemid}
		, deldt = NOW()
		WHERE
		bd_reidx = #{id}
		AND bc_id = #{schBcid}
	</update>

	<update id="boardReplyChkDelProc" parameterType="egovframework.itgcms.core.board.service.BoardSearchVO">
		/* boardReplyChkDelProc */
		UPDATE t_board SET
		delyn = 'Y'
		, delmemid = #{schRegmemid}
		, deldt = NOW()
		WHERE bd_reidx IN
		<foreach item="item" index="index" open="(" close=")" separator="," collection="chkId">
			#{item}
		</foreach>
		AND bc_id = #{schBcid}
	</update>

	<insert id="boardLobInsertProc" parameterType="itgMap">
		/** boardLobInsertProc **/
		INSERT INTO T_BOARD_LOB(
			bl_idx,
			bd_idx,
			bl_column,
			bl_contents
		)VALUES(
			IFNULL(MAX(bl_idx),0)+1,
			#{bdIdx},
			#{blColumn},
			#{blContents}
		)
	</insert>
	
	<delete id="boardLobDeleteProc" parameterType="itgMap">
		/***** boardLobDeleteProc *****/
		DELETE
          FROM T_BOARD_LOB
         WHERE bd_idx  = #{id}
	</delete>
	
	<select id="getBoardLobContents" resultMap="boardLob">
	/** getBoardLobContents **/
		SELECT
			a.bl_idx,
			a.bl_contents
       	FROM T_BOARD_LOB a
		WHERE a.bd_idx=#{bdIdx}
		  AND a.bl_column=#{blColumn}
	</select>
</mapper>